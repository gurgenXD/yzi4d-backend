version: "3"

services:

  db:
    image: postgres:16-alpine
    container_name: db
    restart: always
    env_file:
      - ./yzi4d-backend/.env
    ports:
      - "5432:5432"
    volumes:
      - ./db/data:/var/lib/postgresql/data

  app:
    build:
      context: ./yzi4d-backend
      dockerfile: ./cicd/app/Dockerfile
    container_name: app
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./media:/opt/mnt/media
    command: >
      bash -c "python -m cli migrations up && python -m cli start api"
    depends_on:
      - db

  nginx:
    build:
      context: ./yzi4d-backend
      dockerfile: ./cicd/nginx/Dockerfile
    container_name: nginx
    restart: always
    volumes:
      - ./media:/opt/mnt/media
    ports:
      - "80:80"
    depends_on:
      - frontend

  frontend:
    build:
      context: ./yzi4d-frontend
      dockerfile: ./cicd/Dockerfile
    container_name: frontend
    restart: always
    ports:
      - "3000:3000"
    command: npm run start
    depends_on:
      - app

#  prometheus:
#    image: prom/prometheus:latest
#    container_name: prometheus
#    user: root
#    restart: always
#    volumes:
#      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
#      - ./metrics/prometheus:/prometheus
#    ports:
#      - 9090:9090
#    command:
#      - --config.file=/etc/prometheus/prometheus.yml

#  grafana:
#    image: grafana/grafana:latest
#    container_name: grafana
#    user: root
#    restart: always
#    volumes:
#      - ./metrics/grafana:/var/lib/grafana
#    ports:
#      - 3000:3000
#    depends_on:
#      - prometheus

#  cadvisor:
#    image: google/cadvisor:latest
#    container_name: cadvisor
#    restart: always
#    volumes:
#      - /:/rootfs:ro
#      - /var/run:/var/run:ro
#      - /sys:/sys:ro
#      - /var/lib/docker/:/var/lib/docker:ro
#      - /dev/disk/:/dev/disk:ro
#    expose:
#      - 8080
